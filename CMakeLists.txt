CMAKE_MINIMUM_REQUIRED(VERSION 3.6.0)

PROJECT(mephisto-tests)

SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

FIND_PACKAGE(MPI)

SET(ALPAKA_ROOT "${CMAKE_CURRENT_LIST_DIR}/alpaka" CACHE STRING "The location of the alpaka library")
LIST(APPEND CMAKE_MODULE_PATH "${ALPAKA_ROOT}")
FIND_PACKAGE("alpaka" REQUIRED)

INCLUDE("${ALPAKA_ROOT}/cmake/common.cmake")
#INCLUDE("${ALPAKA_ROOT}/cmake/dev.cmake")

IF(CMAKE_VERSION VERSION_LESS 3.7.0)
    INCLUDE_DIRECTORIES(
        ${alpaka_INCLUDE_DIRS})
    ADD_DEFINITIONS(
        ${alpaka_DEFINITIONS})
ENDIF()

ALPAKA_ADD_EXECUTABLE(
    alpaka-mxv-cpu
    "alpaka-mxv-cpu.cpp")
TARGET_LINK_LIBRARIES(
    alpaka-mxv-cpu
    PUBLIC "alpaka")

IF(ALPAKA_ACC_GPU_CUDA_ENABLE)
    ALPAKA_ADD_EXECUTABLE(
        alpaka-mxv-gpu
        "alpaka-mxv-gpu.cpp")
    TARGET_LINK_LIBRARIES(
        alpaka-mxv-gpu
        PUBLIC "alpaka")
ENDIF()

IF(MPI_CXX_FOUND)

    FIND_PATH(DASH_INCLUDE_PATH
        NAMES libdash.h
        DOC "The path to DASH header files")

    FIND_LIBRARY(DASH_MPI_LIBRARY NAMES dash-mpi)
    FIND_LIBRARY(DART_MPI_LIBRARY NAMES dart-mpi)
    FIND_LIBRARY(DART_BASE_LIBRARY NAMES dart-base)

    MESSAGE(STATUS "DASH: ${DASH_INCLUDE_PATH}")
    MESSAGE(STATUS "DASH: ${DASH_MPI_LIBRARY} ${DART_MPI_LIBRARY} ${DART_BASE_LIBRARY}")

    ADD_EXECUTABLE(
        dash-mxv
        "dash-mxv.cpp")
    TARGET_INCLUDE_DIRECTORIES(
        dash-mxv
        PUBLIC
        "${MPI_CXX_INCLUDE_PATH}"
        "${DASH_INCLUDE_PATH}")
    TARGET_LINK_LIBRARIES(
        dash-mxv
        "${MPI_CXX_LIBRARIES};${DASH_MPI_LIBRARY};${DART_MPI_LIBRARY};${DART_BASE_LIBRARY}")

ENDIF()
